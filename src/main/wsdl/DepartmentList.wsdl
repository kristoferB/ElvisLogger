<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="DepartmentList" targetNamespace="IC.PublicService.Elvis.DepartmentList"
                  xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                  xmlns:wsap="http://schemas.xmlsoap.org/ws/2004/08/addressing/policy"
                  xmlns:wsa10="http://www.w3.org/2005/08/addressing" xmlns:tns="IC.PublicService.Elvis.DepartmentList"
                  xmlns:msc="http://schemas.microsoft.com/ws/2005/12/wsdl/contract"
                  xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"
                  xmlns:wsx="http://schemas.xmlsoap.org/ws/2004/09/mex"
                  xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:i0="http://tempuri.org/"
                  xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata"
                  xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing"
                  xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy"
                  xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl"
                  xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/"
                  xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:types>
        <xs:schema elementFormDefault="qualified" targetNamespace="IC.PublicService.Elvis.DepartmentList"
                   xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <xs:import namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays"/>
            <xs:import namespace="IC.PublicService.Elvis.DepartmentList.Contract"/>
            <xs:element name="FetchDepartmentList">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="departments" nillable="true" type="q1:ArrayOfstring"
                                    xmlns:q1="http://schemas.microsoft.com/2003/10/Serialization/Arrays"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="FetchDepartmentListResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="FetchDepartmentListResult" nillable="true"
                                    type="q2:FetchDepartmentListResponse"
                                    xmlns:q2="IC.PublicService.Elvis.DepartmentList.Contract"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="FetchDepartmentListWithEvents">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="departments" nillable="true" type="q3:ArrayOfstring"
                                    xmlns:q3="http://schemas.microsoft.com/2003/10/Serialization/Arrays"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="FetchDepartmentListWithEventsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="FetchDepartmentListWithEventsResult" nillable="true"
                                    type="q4:FetchDepartmentListWithEventsResponse"
                                    xmlns:q4="IC.PublicService.Elvis.DepartmentList.Contract"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:schema>
        <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified"
                   targetNamespace="http://schemas.microsoft.com/2003/10/Serialization/"
                   xmlns:xs="http://www.w3.org/2001/XMLSchema"
                   xmlns:tns="http://schemas.microsoft.com/2003/10/Serialization/">
            <xs:element name="anyType" nillable="true" type="xs:anyType"/>
            <xs:element name="anyURI" nillable="true" type="xs:anyURI"/>
            <xs:element name="base64Binary" nillable="true" type="xs:base64Binary"/>
            <xs:element name="boolean" nillable="true" type="xs:boolean"/>
            <xs:element name="byte" nillable="true" type="xs:byte"/>
            <xs:element name="dateTime" nillable="true" type="xs:dateTime"/>
            <xs:element name="decimal" nillable="true" type="xs:decimal"/>
            <xs:element name="double" nillable="true" type="xs:double"/>
            <xs:element name="float" nillable="true" type="xs:float"/>
            <xs:element name="int" nillable="true" type="xs:int"/>
            <xs:element name="long" nillable="true" type="xs:long"/>
            <xs:element name="QName" nillable="true" type="xs:QName"/>
            <xs:element name="short" nillable="true" type="xs:short"/>
            <xs:element name="string" nillable="true" type="xs:string"/>
            <xs:element name="unsignedByte" nillable="true" type="xs:unsignedByte"/>
            <xs:element name="unsignedInt" nillable="true" type="xs:unsignedInt"/>
            <xs:element name="unsignedLong" nillable="true" type="xs:unsignedLong"/>
            <xs:element name="unsignedShort" nillable="true" type="xs:unsignedShort"/>
            <xs:element name="char" nillable="true" type="tns:char"/>
            <xs:simpleType name="char">
                <xs:restriction base="xs:int"/>
            </xs:simpleType>
            <xs:element name="duration" nillable="true" type="tns:duration"/>
            <xs:simpleType name="duration">
                <xs:restriction base="xs:duration">
                    <xs:pattern value="\-?P(\d*D)?(T(\d*H)?(\d*M)?(\d*(\.\d*)?S)?)?"/>
                    <xs:minInclusive value="-P10675199DT2H48M5.4775808S"/>
                    <xs:maxInclusive value="P10675199DT2H48M5.4775807S"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:element name="guid" nillable="true" type="tns:guid"/>
            <xs:simpleType name="guid">
                <xs:restriction base="xs:string">
                    <xs:pattern value="[\da-fA-F]{8}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{12}"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:attribute name="FactoryType" type="xs:QName"/>
            <xs:attribute name="Id" type="xs:ID"/>
            <xs:attribute name="Ref" type="xs:IDREF"/>
        </xs:schema>
        <xs:schema elementFormDefault="qualified"
                   targetNamespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays"
                   xmlns:xs="http://www.w3.org/2001/XMLSchema"
                   xmlns:tns="http://schemas.microsoft.com/2003/10/Serialization/Arrays">
            <xs:complexType name="ArrayOfstring">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:element name="ArrayOfstring" nillable="true" type="tns:ArrayOfstring"/>
        </xs:schema>
        <xs:schema elementFormDefault="qualified" targetNamespace="IC.PublicService.Elvis.DepartmentList.Contract"
                   xmlns:xs="http://www.w3.org/2001/XMLSchema"
                   xmlns:tns="IC.PublicService.Elvis.DepartmentList.Contract">
            <xs:import namespace="IC.PublicService.Elvis.DepartmentList.Dto"/>
            <xs:complexType name="FetchDepartmentListResponse">
                <xs:sequence>
                    <xs:element minOccurs="0" name="DepartmentList" nillable="true" type="q1:ArrayOfDepartmentListItem"
                                xmlns:q1="IC.PublicService.Elvis.DepartmentList.Dto"/>
                    <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="ResultCode" type="tns:ResultCodeEnum"/>
                </xs:sequence>
            </xs:complexType>
            <xs:element name="FetchDepartmentListResponse" nillable="true" type="tns:FetchDepartmentListResponse"/>
            <xs:simpleType name="ResultCodeEnum">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="OK"/>
                    <xs:enumeration value="Error"/>
                    <xs:enumeration value="Info"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:element name="ResultCodeEnum" nillable="true" type="tns:ResultCodeEnum"/>
            <xs:complexType name="FetchDepartmentListWithEventsResponse">
                <xs:sequence>
                    <xs:element minOccurs="0" name="DepartmentList" nillable="true"
                                type="q2:ArrayOfDepartmentListItemWithEvents"
                                xmlns:q2="IC.PublicService.Elvis.DepartmentList.Dto"/>
                    <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="ResultCode" type="tns:ResultCodeEnum"/>
                </xs:sequence>
            </xs:complexType>
            <xs:element name="FetchDepartmentListWithEventsResponse" nillable="true"
                        type="tns:FetchDepartmentListWithEventsResponse"/>
        </xs:schema>
        <xs:schema elementFormDefault="qualified" targetNamespace="IC.PublicService.Elvis.DepartmentList.Dto"
                   xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="IC.PublicService.Elvis.DepartmentList.Dto">
            <xs:complexType name="ArrayOfDepartmentListItem">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="unbounded" name="DepartmentListItem" nillable="true"
                                type="tns:DepartmentListItem"/>
                </xs:sequence>
            </xs:complexType>
            <xs:element name="ArrayOfDepartmentListItem" nillable="true" type="tns:ArrayOfDepartmentListItem"/>
            <xs:complexType name="DepartmentListItem">
                <xs:sequence>
                    <xs:element minOccurs="0" name="CareContactId" type="xs:int"/>
                    <xs:element minOccurs="0" name="CareContactRegistrationTime" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="DepartmentComment" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="Location" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="PatientId" type="xs:int"/>
                    <xs:element minOccurs="0" name="ReasonForVisit" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="Team" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="VisitId" type="xs:int"/>
                    <xs:element minOccurs="0" name="VisitRegistrationTime" type="xs:dateTime"/>
                </xs:sequence>
            </xs:complexType>
            <xs:element name="DepartmentListItem" nillable="true" type="tns:DepartmentListItem"/>
            <xs:complexType name="ArrayOfDepartmentListItemWithEvents">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="unbounded" name="DepartmentListItemWithEvents" nillable="true"
                                type="tns:DepartmentListItemWithEvents"/>
                </xs:sequence>
            </xs:complexType>
            <xs:element name="ArrayOfDepartmentListItemWithEvents" nillable="true"
                        type="tns:ArrayOfDepartmentListItemWithEvents"/>
            <xs:complexType name="DepartmentListItemWithEvents">
                <xs:sequence>
                    <xs:element minOccurs="0" name="CareContactId" type="xs:int"/>
                    <xs:element minOccurs="0" name="CareContactRegistrationTime" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="DepartmentComment" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="Events" nillable="true" type="tns:ArrayOfEvent"/>
                    <xs:element minOccurs="0" name="Location" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="PatientId" type="xs:int"/>
                    <xs:element minOccurs="0" name="ReasonForVisit" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="Team" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="VisitId" type="xs:int"/>
                    <xs:element minOccurs="0" name="VisitRegistrationTime" type="xs:dateTime"/>
                </xs:sequence>
            </xs:complexType>
            <xs:element name="DepartmentListItemWithEvents" nillable="true" type="tns:DepartmentListItemWithEvents"/>
            <xs:complexType name="ArrayOfEvent">
                <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="unbounded" name="Event" nillable="true" type="tns:Event"/>
                </xs:sequence>
            </xs:complexType>
            <xs:element name="ArrayOfEvent" nillable="true" type="tns:ArrayOfEvent"/>
            <xs:complexType name="Event">
                <xs:sequence>
                    <xs:element minOccurs="0" name="CareEventId" type="xs:int"/>
                    <xs:element minOccurs="0" name="Category" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="End" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="Start" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="Title" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="Type" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="Value" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="VisitId" type="xs:int"/>
                </xs:sequence>
            </xs:complexType>
            <xs:element name="Event" nillable="true" type="tns:Event"/>
        </xs:schema>
    </wsdl:types>
    <wsdl:message name="IDepartmentList_FetchDepartmentList_InputMessage">
        <wsdl:part name="parameters" element="tns:FetchDepartmentList"/>
    </wsdl:message>
    <wsdl:message name="IDepartmentList_FetchDepartmentList_OutputMessage">
        <wsdl:part name="parameters" element="tns:FetchDepartmentListResponse"/>
    </wsdl:message>
    <wsdl:message name="IDepartmentList_FetchDepartmentListWithEvents_InputMessage">
        <wsdl:part name="parameters" element="tns:FetchDepartmentListWithEvents"/>
    </wsdl:message>
    <wsdl:message name="IDepartmentList_FetchDepartmentListWithEvents_OutputMessage">
        <wsdl:part name="parameters" element="tns:FetchDepartmentListWithEventsResponse"/>
    </wsdl:message>
    <wsdl:portType name="IDepartmentList">
        <wsdl:operation name="FetchDepartmentList">
            <wsdl:input wsaw:Action="IC.PublicService.Elvis.DepartmentList/IDepartmentList/FetchDepartmentList"
                        message="tns:IDepartmentList_FetchDepartmentList_InputMessage"/>
            <wsdl:output wsaw:Action="IC.PublicService.Elvis.DepartmentList/IDepartmentList/FetchDepartmentListResponse"
                         message="tns:IDepartmentList_FetchDepartmentList_OutputMessage"/>
        </wsdl:operation>
        <wsdl:operation name="FetchDepartmentListWithEvents">
            <wsdl:input
                    wsaw:Action="IC.PublicService.Elvis.DepartmentList/IDepartmentList/FetchDepartmentListWithEvents"
                    message="tns:IDepartmentList_FetchDepartmentListWithEvents_InputMessage"/>
            <wsdl:output
                    wsaw:Action="IC.PublicService.Elvis.DepartmentList/IDepartmentList/FetchDepartmentListWithEventsResponse"
                    message="tns:IDepartmentList_FetchDepartmentListWithEvents_OutputMessage"/>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:binding name="BasicHttpBinding_IDepartmentList" type="tns:IDepartmentList">
        <soap:binding transport="http://schemas.xmlsoap.org/soap/http"/>
        <wsdl:operation name="FetchDepartmentList">
            <soap:operation soapAction="IC.PublicService.Elvis.DepartmentList/IDepartmentList/FetchDepartmentList"
                            style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
        <wsdl:operation name="FetchDepartmentListWithEvents">
            <soap:operation
                    soapAction="IC.PublicService.Elvis.DepartmentList/IDepartmentList/FetchDepartmentListWithEvents"
                    style="document"/>
            <wsdl:input>
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:service name="DepartmentList">
        <wsdl:port name="BasicHttpBinding_IDepartmentList" binding="tns:BasicHttpBinding_IDepartmentList">
            <soap:address location="http://vgwb0090.vgregion.se/IC/publicservice/elvis/departmentlist/departmentlist.svc"/>
        </wsdl:port>
    </wsdl:service>
</wsdl:definitions>